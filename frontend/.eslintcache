[{"C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\index.js":"1","C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\App.js":"2","C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\reportWebVitals.js":"3","C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\components\\Projects.js":"4","C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\components\\AddEditProject.js":"5","C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\components\\ProjectDetails.js":"6","C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\components\\AddTime.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":566,"mtime":1612121142840,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":5110,"mtime":1612144798902,"results":"12","hashOfConfig":"9"},{"size":1327,"mtime":1618901937692,"results":"13","hashOfConfig":"9"},{"size":3872,"mtime":1618901884116,"results":"14","hashOfConfig":"9"},{"size":1277,"mtime":1618901950704,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"p74b3h",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\index.js",[],["32","33"],"C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\App.js",[],"C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\reportWebVitals.js",[],"C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\components\\Projects.js",["34","35","36"],"import { useState, useEffect } from 'react';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddEditProject from \"./AddEditProject\";\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Projects() {\r\n\r\n    const URL = `http://localhost:5000`\r\n\r\n    const [projects, setProjects] = useState([]);\r\n    const [isFormVisible, setIsFormVisible] = useState(false);\r\n    const [isFormVisibleForUpdate, setIsFormVisibleForUpdate] = useState(false);\r\n    const [editId, setEditId] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getProjects = async () => {\r\n            const projectsArray = await fetchProjects();\r\n            setProjects(projectsArray);\r\n        }\r\n        getProjects();\r\n    }, [])\r\n\r\n    const fetchProjects = async () => {\r\n        const res = await fetch(`${URL}/projects`);\r\n        const data = await res.json();\r\n        // console.log(data);\r\n        return data;\r\n    }\r\n\r\n    const fetchProject = async (id) => {\r\n        const res = await fetch(`${URL}/projects/${id}`);\r\n        const data = await res.json();\r\n        // console.log(data);\r\n        return data\r\n    }\r\n\r\n    const onAddProject = async (project) => {\r\n        const res = await fetch(`${URL}/projects`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(project),\r\n        })\r\n        const data = await res.json();\r\n        setProjects([...projects, data]);\r\n    }\r\n\r\n    const onEditProject = async (body) => {\r\n        const res = await fetch(`${URL}/projects/${editId}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(body),\r\n        })\r\n        const data = await res.json();\r\n        // setProjects([...projects, data]);\r\n    }\r\n\r\n\r\n    const onDeleteClick = async id => {\r\n        // console.log(id);\r\n        await fetch(`${URL}/projects/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n\r\n        setProjects(projects.filter((project) => project.id !== id))\r\n    };\r\n\r\n    const onEditClick = id => {\r\n        setIsFormVisibleForUpdate(!isFormVisibleForUpdate)\r\n        setEditId(id);\r\n        const getProject = async () => {\r\n            const project = await fetchProject(id);\r\n            // console.log(project)\r\n        }\r\n        getProject();\r\n    };\r\n\r\n    const onViewClick = (row) => {\r\n        // console.log(`row id is`, row.id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>Projects</h3>\r\n            <TableContainer>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"right\">Id</TableCell>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell>Description</TableCell>\r\n                            <TableCell>Actions</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {projects.map(row => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell align=\"right\">{row.id}</TableCell>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.name}\r\n                                </TableCell>\r\n                                <TableCell>{row.description}</TableCell>\r\n                                <TableCell>\r\n                                    <Button size=\"small\" variant=\"contained\"\r\n                                        onClick={() => onDeleteClick(row.id)}>Delete</Button>\r\n                                    <Button size=\"small\" variant=\"contained\"\r\n                                        onClick={() => onEditClick(row.id)}>Edit</Button>\r\n                                    <Button size=\"small\" variant=\"contained\"\r\n                                        onClick={() => onViewClick(row)}><Link to={`/edit/${row.id}`}>View</Link></Button>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n            <div style={{ 'padding': '16px 0' }}>\r\n                <Button style={{ 'margin': '16px 0' }} size=\"small\" variant=\"contained\" color=\"primary\"\r\n                    onClick={() => setIsFormVisible(!isFormVisible)}>Add project</Button>\r\n                {isFormVisible && <AddEditProject addProject={onAddProject} />}\r\n            </div>\r\n\r\n            { isFormVisibleForUpdate && <AddEditProject editProject={onEditProject} editId={editId} isEdit={true} />}\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\components\\AddEditProject.js",[],"C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\components\\ProjectDetails.js",["37"],"C:\\Users\\denna\\OneDrive\\Desktop\\projects\\time-tracker\\frontend\\time-track\\src\\components\\AddTime.js",["38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":27,"column":8,"nodeType":"45","endLine":27,"endColumn":10,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":63,"column":15,"nodeType":"49","messageId":"50","endLine":63,"endColumn":19},{"ruleId":"47","severity":1,"message":"51","line":81,"column":19,"nodeType":"49","messageId":"50","endLine":81,"endColumn":26},{"ruleId":"43","severity":1,"message":"52","line":47,"column":8,"nodeType":"45","endLine":47,"endColumn":12,"suggestions":"53"},{"ruleId":"47","severity":1,"message":"54","line":6,"column":20,"nodeType":"49","messageId":"50","endLine":6,"endColumn":29},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProjects'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'project' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchProject' and 'fetchProjectTimes'. Either include them or remove the dependency array.",["58"],"'setAmount' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [fetchProjects]",{"range":"63","text":"64"},"Update the dependencies array to be: [fetchProject, fetchProjectTimes, id]",{"range":"65","text":"66"},[1046,1048],"[fetchProjects]",[1637,1641],"[fetchProject, fetchProjectTimes, id]"]